name: Node.js CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    

    strategy:
      matrix:
        node-version: [12.x]
    env: 
       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
    - uses: act10ns/slack@v1
      with:
          status: starting
          channel: '#lintsteps'
          if: always()
    
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      id: checkout
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      id: npm_install
      run: npm install
    - run: npm install jasmine-node
    - name: npm test
      id: npm_test
      run: npm test
    - name: npm eslint
      id: npm_eslint
      run: npm install eslint --save-dev
    - name: npm build
      id: npm_build
      run: npm run build --if-present
    
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
    - name: Blackduck-SCA Scan
      uses: blackducksoftware/github-action@2.0.0
      with:
        args: |
          --blackduck.url="${{ secrets.BLACKDUCK_URL}}" \
          --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN}}" \
          --logging.level.com.synopsys.integration="DEBUG" \
          --detect.tools="DETECTOR" \
          --detect.project.name="${{ github.event.repository.name }}" \
          --detect.project.version.distribution="SAAS" \
